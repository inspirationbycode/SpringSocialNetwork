<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- static resources -->
    <security:http pattern="/(i|s|js|f)/.*\.(png|bmp|gif|css|js|ttf|fon)" security="none"/>
    <security:http auto-config="true" use-expressions="true" authentication-manager-ref="authenticationManager">
        <security:intercept-url pattern="/general/AboutSite" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
        <security:intercept-url pattern="/**" access="permitAll"/>

        <security:form-login login-page="/account/login"
                             login-processing-url="/account/login"
                             default-target-url="/"
                             authentication-failure-url="/account/login?error"
                             always-use-default-target="true"
                />
        <security:logout logout-url="/logout" logout-success-url="/" delete-cookies="JSESSIONID"/>
        <security:csrf />
    </security:http>

    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider>
            <security:password-encoder ref="passwordEncoder"/>
            <security:jdbc-user-service id="jdbcUserDetailsManager" data-source-ref="dataSource"
                                        users-by-username-query="SELECT u.Email, u.Password, u.Is_activated FROM user as u WHERE Email = ?"
                                        authorities-by-username-query="SELECT u.Email, r.Name FROM user as u, roles as r, user_in_roles as ur
                                                                        WHERE ur.Id_role = r.Id and ur.Id_user = u.Id and u.Email = ?"/>
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="rememberMeServices"
          class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
        <constructor-arg name="userDetailsService" ref="jdbcUserDetailsManager"/>
        <constructor-arg name="key" value="mold-forum-rememberme-uniq-keyyyy:2015"/>
        <property name="cookieName" value="M"/>
        <property name="parameter" value="remember"/>
    </bean>

    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <constructor-arg name="decisionVoters">
            <list>
                <bean class="org.springframework.security.web.access.expression.WebExpressionVoter"/>
                <bean class="org.springframework.security.access.vote.RoleVoter ">
                    <property name="rolePrefix" value="role."/>
                </bean>
                <bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="filterMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="-1" />
    </bean>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg name="strength" value="10" />
    </bean>

    <!--
        <bean id="authFailureHandler" class="com.gmail.vitalatron.mold.forum.model.event.handler.AuthenticationFailureHandlerImpl"/>
        <bean id="authSuccessHandler" class="com.gmail.vitalatron.mold.forum.model.event.handler.AuthenticationSuccessHandlerImpl"/>
        <bean id="logoutSuccessHandler" class="com.gmail.vitalatron.mold.forum.model.event.handler.LogoutSuccessHandlerImpl"/>
        -->
</beans>